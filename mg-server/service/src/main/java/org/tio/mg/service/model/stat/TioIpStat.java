/*
 * 使用本软件请从杭州钛特云有限公司获取授权，其它途径获取本软件的行为皆为侵权行为
 * 本源代码由杭州钛特云科技有限公司授权给娄底大新土石方施工有限公司使用
 */
package org.tio.mg.service.model.stat;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.tio.core.ChannelContext;
import org.tio.core.TioConfig;
import org.tio.core.stat.IpStat;
import org.tio.mg.service.model.main.IpInfo;
import org.tio.mg.service.model.stat.base.BaseTioIpStat;
import org.tio.mg.service.service.base.IpInfoService;
import org.tio.sitexxx.servicecommon.vo.Const;
import org.tio.utils.lock.SetWithLock;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class TioIpStat extends BaseTioIpStat<TioIpStat> {
	public static final TioIpStat dao = new TioIpStat().dao();

	private static Logger log = LoggerFactory.getLogger(TioIpStat.class);

	public static TioIpStat from(TioConfig tioConfig, IpStat ipStat, Byte appType) {
		TioIpStat tioIpStat = new TioIpStat();

		SetWithLock<ChannelContext> setOfIp = tioConfig.ips.clients(tioConfig, ipStat.getIp());
		if (setOfIp != null) {
			tioIpStat.setActivatedCount(setOfIp.getObj().size());
		} else {
			log.info("{}, {} 在ips对象中找不到对应的SetWithLock", tioConfig.getName(), ipStat.getIp());
			tioIpStat.setActivatedCount(0);
		}

		IpInfo ipInfo = IpInfoService.ME.save(ipStat.getIp());

		tioIpStat.setAppType(appType);
		tioIpStat.setBytesPerTcpReceive(ipStat.getBytesPerTcpReceive());
		tioIpStat.setDecodeErrorCount(ipStat.getDecodeErrorCount().get());
		tioIpStat.setDuration(ipStat.getDuration());
		tioIpStat.setDurationType(ipStat.getDurationType());
		tioIpStat.setFormatedDuration(ipStat.getFormatedDuration());
		tioIpStat.setHandledBytes(ipStat.getHandledBytes().get());
		tioIpStat.setHandledPackets(ipStat.getHandledPackets().get());
		if (ipInfo != null) {
			tioIpStat.setIpid(ipInfo.getId());
		}
		tioIpStat.setReceivedBytes(ipStat.getReceivedBytes().get());
		tioIpStat.setReceivedPackets(ipStat.getReceivedPackets().get());
		tioIpStat.setReceivedTcps(ipStat.getReceivedTcps().get());
		tioIpStat.setRequestCount(ipStat.getRequestCount().get());
		tioIpStat.setSentBytes(ipStat.getSentBytes().get());
		tioIpStat.setSentPackets(ipStat.getSentPackets().get());
		tioIpStat.setServer(Const.MY_IP_API);
		tioIpStat.setStart(ipStat.getStart());
		tioIpStat.setPacketsPerTcpReceive(ipStat.getPacketsPerTcpReceive());
		return tioIpStat;
	}

}
