/*
 * 使用本软件请从杭州钛特云有限公司获取授权，其它途径获取本软件的行为皆为侵权行为
 * 本源代码由杭州钛特云科技有限公司授权给娄底大新土石方施工有限公司使用
 */
package org.tio.sitexxx.service.model.main;

import org.tio.sitexxx.service.model.main.base.BaseWxChatItems;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class WxChatItems extends BaseWxChatItems<WxChatItems> {
	public static final WxChatItems dao = new WxChatItems().dao();
	
	private WxChatItemsMeta meta;
	
	public WxChatItemsMeta getMeta() {
		return meta;
	}

	public void setMeta(WxChatItemsMeta meta) {
		this.meta = meta;
	}

	/**
	 * 会话id
	 */
	public void setChatlinkid(java.lang.Long chatlinkid) {
		put("chatlinkid", chatlinkid);
	}
	
	/**
	 * 会话id
	 */
	public java.lang.Long getChatlinkid() {
		return getLong("chatlinkid");
	}
	
	/**
	 * 动态会话id
	 */
	public void setChatlinkmetaid(java.lang.Long chatlinkmetaid) {
		put("chatlinkmetaid", chatlinkmetaid);
	}
	
	/**
	 * 动态会话id
	 */
	public java.lang.Long getChatlinkmetaid() {
		return getLong("chatlinkmetaid");
	}
	
	/**
	 * 展示状态（是否显示列表，该状态下跟激活状态不同的是，有特殊情况激活而不显示）：1：是；2：否
	 */
	public void setViewflag(java.lang.Byte viewflag) {
		put("viewflag", viewflag);
	}
	
	/**
	 * 展示状态（是否显示列表，该状态下跟激活状态不同的是，有特殊情况激活而不显示）：1：是；2：否
	 */
	public java.lang.Byte getViewflag() {
		return getByte("viewflag");
	}
	
	/**
	 * 对方是否已读自己的消息（私聊）：1：是；2：否byte FACE_EMOTION = 15;
	 */
	public void setToreadflag(java.lang.Byte toreadflag) {
		put("toreadflag", toreadflag);
	}
	
	/**
	 * 对方是否已读自己的消息（私聊）：1：是；2：否
	 */
	public java.lang.Byte getToreadflag() {
		return getByte("toreadflag");
	}

	/**
	 * 是否已读：1：是；2：否
	 */
	public void setReadflag(java.lang.Byte readflag) {
		put("readflag", readflag);
	}
	
	/**
	 * 是否已读：1：是；2：否
	 */
	public java.lang.Byte getReadflag() {
		return getByte("readflag");
	}

	/**
	 * 未读数
	 */
	public void setNotreadcount(java.lang.Short notreadcount) {
		put("notreadcount", notreadcount);
	}
	
	/**
	 * 未读数
	 */
	public java.lang.Short getNotreadcount() {
		return getShort("notreadcount");
	}

	/**
	 * 未读开始的消息id
	 */
	public void setNotreadstartmsgid(java.lang.Long notreadstartmsgid) {
		put("notreadstartmsgid", notreadstartmsgid);
	}
	
	/**
	 * 未读开始的消息id
	 */
	public java.lang.Long getNotreadstartmsgid() {
		return getLong("notreadstartmsgid");
	}

	/**
	 * @是否已读：1：是；2：否
	 */
	public void setAtreadflag(java.lang.Byte atreadflag) {
		put("atreadflag", atreadflag);
	}
	
	/**
	 * @是否已读：1：是；2：否
	 */
	public java.lang.Byte getAtreadflag() {
		return getByte("atreadflag");
	}

	/**
	 * @未读的条数
	 */
	public void setAtnotreadcount(java.lang.Short atnotreadcount) {
		put("atnotreadcount", atnotreadcount);
	}
	
	/**
	 * @未读的条数
	 */
	public java.lang.Short getAtnotreadcount() {
		return getShort("atnotreadcount");
	}

	/**
	 * @未读的起始消息id
	 */
	public void setAtnotreadstartmsgid(java.lang.Long atnotreadstartmsgid) {
		put("atnotreadstartmsgid", atnotreadstartmsgid);
	}
	
	/**
	 * @未读的起始消息id
	 */
	public java.lang.Long getAtnotreadstartmsgid() {
		return getLong("atnotreadstartmsgid");
	}

	/**
	 * 累计会话消息数
	 */
	public void setMsgcount(java.lang.Short msgcount) {
		put("msgcount", msgcount);
	}
	
	/**
	 * 累计会话消息数
	 */
	public java.lang.Short getMsgcount() {
		return getShort("msgcount");
	}

	/**
	 * 聊天最后的消息id
	 */
	public void setLastmsgid(java.lang.Long lastmsgid) {
		put("lastmsgid", lastmsgid);
	}
	
	/**
	 * 聊天最后的消息id
	 */
	public java.lang.Long getLastmsgid() {
		return getLong("lastmsgid");
	}

	/**
	 * 聊天最后的消息发送者
	 */
	public void setLastmsguid(java.lang.Integer lastmsguid) {
		put("lastmsguid", lastmsguid);
	}
	
	/**
	 * 聊天最后的消息发送者
	 */
	public java.lang.Integer getLastmsguid() {
		return getInt("lastmsguid");
	}

	/**
	 * 最后消息的昵称
	 */
	public void setFromnick(java.lang.String fromnick) {
		put("fromnick", fromnick);
	}
	
	/**
	 * 最后消息的昵称
	 */
	public java.lang.String getFromnick() {
		return getStr("fromnick");
	}

	/**
	 * 最后的消息缩略
	 */
	public void setMsgresume(java.lang.String msgresume) {
		put("msgresume", msgresume);
	}
	
	/**
	 * 最后的消息缩略
	 */
	public java.lang.String getMsgresume() {
		return getStr("msgresume");
	}

	/**
	 * 消息类型：同消息
	 */
	public void setMsgtype(java.lang.Byte msgtype) {
		put("msgtype", msgtype);
	}
	
	/**
	 * 消息类型：同消息
	 */
	public java.lang.Byte getMsgtype() {
		return getByte("msgtype");
	}

	/**
	 * 最后一条是否是系统消息：1：是；2：否
	 */
	public void setSysflag(java.lang.Byte sysflag) {
		put("sysflag", sysflag);
	}
	
	/**
	 * 最后一条是否是系统消息：1：是；2：否
	 */
	public java.lang.Byte getSysflag() {
		return getByte("sysflag");
	}

	/**
	 * 消息模板key值
	 */
	public void setSysmsgkey(java.lang.String sysmsgkey) {
		put("sysmsgkey", sysmsgkey);
	}
	
	/**
	 * 消息模板key值
	 */
	public java.lang.String getSysmsgkey() {
		return getStr("sysmsgkey");
	}

	/**
	 * 操作者昵称
	 */
	public void setOpernick(java.lang.String opernick) {
		put("opernick", opernick);
	}
	
	/**
	 * 操作者昵称
	 */
	public java.lang.String getOpernick() {
		return getStr("opernick");
	}

	/**
	 * 发送者昵称列表
	 */
	public void setTonicks(java.lang.String tonicks) {
		put("tonicks", tonicks);
	}
	
	/**
	 * 发送者昵称列表
	 */
	public java.lang.String getTonicks() {
		return getStr("tonicks");
	}

	/**
	 * 发送时间
	 */
	public void setSendtime(java.util.Date sendtime) {
		put("sendtime", sendtime);
	}
	
	/**
	 * 发送时间
	 */
	public java.util.Date getSendtime() {
		return get("sendtime");
	}

	/**
	 * 会话更新时间
	 */
	public void setChatuptime(java.util.Date chatuptime) {
		put("chatuptime", chatuptime);
	}
	
	/**
	 * 会话更新时间
	 */
	public java.util.Date getChatuptime() {
		return get("chatuptime");
	}
}
