<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>tio-site-http-server-api</artifactId>
	<name>${project.artifactId}</name>




	<parent>
		<groupId>org.t-io</groupId>
		<artifactId>tio-site-parent</artifactId>
		<version>1.0.0-tio-sitexxx</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>


	<dependencies>
		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-site-im-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-http-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-websocket-server</artifactId>
		</dependency>



		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-flash-policy-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-site-service</artifactId>
		</dependency>
		<dependency>
			<groupId>org.t-io</groupId>
			<artifactId>tio-site-service-pay</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- QQ登录 -->
		<dependency>
			<groupId>net.gplatform</groupId>
			<artifactId>Sdk4J</artifactId>
		</dependency>
		<!-- 微博登录 -->
		<dependency>
			<groupId>com.belerweb</groupId>
			<artifactId>weibo4j-oauth2</artifactId>
		</dependency>



		<!-- 让自己成为oauth2 server -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
		</dependency>





		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacv</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.bytedeco.javacpp-presets</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>opencv</artifactId>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg</artifactId>
		</dependency>



		<!-- windows平台 -->
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>opencv</artifactId>
			<classifier>${javacpp.platform.windows-x86_64}</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg</artifactId>
			<classifier>${javacpp.platform.windows-x86_64}</classifier>
			<scope>provided</scope>
		</dependency>

		<!-- linux平台 -->
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>opencv</artifactId>
			<classifier>${javacpp.platform.linux-x86_64}</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg</artifactId>
			<classifier>${javacpp.platform.linux-x86_64}</classifier>
			<scope>provided</scope>
		</dependency>


	</dependencies>
	<build>
		<plugins>
			<!-- 
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proguardVersion>${proguard.version}</proguardVersion>
					<obfuscate>true</obfuscate>
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}-small.jar</outjar>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
						<lib>${java.home}/lib/jsse.jar</lib>
					</libs>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>${proguard.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			-->
		</plugins>
	</build>

</project>